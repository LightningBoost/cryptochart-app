# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

type BarData {
    config: DataConfig
    dataSets: [BarDatasets!]!
}

type BarDatasets {
    values: [Values!]!
}

type CandleStickData {
    dataSets: [CandleStickDataset!]!
}

type CandleStickDataset {
    config: CommonDatasetConfig!
    label: String!
    values: [CandleStickValue!]!
}

type CandleStickValue {
    close: Float!
    marker: String!
    open: Float!
    shadowH: Float!
    shadowL: Float!
    timestamp: Float!
    volume: String!
    x: Float
}

type Candles {
    close: String!
    high: String!
    low: String!
    open: String!
    timestamp: Float!
    volume: String!
}

type CombinedData {
    barData: BarData
    candleData: CandleStickData
    lineData: LineData
}

type CommonDatasetConfig {
    axisDependency: AxisDependency!
    decreasingColor: String
    decreasingPaintStyle: CandleStickPaintStyle
    drawValues: Boolean!
    increasingColor: String
    increasingPaintStyle: CandleStickPaintStyle
    shadowColor: String
    shadowColorSameAsCandle: Boolean
    shadowWidth: Float
}

type DataConfig {
    barWidth: Float
    color: String!
    drawCircles: Boolean
    mode: ConfigMode
}

type LineData {
    dataSets: [LineDatasets!]!
}

type LineDatasets {
    config: DataConfig!
    values: [Values!]!
}

type Query {
    chart(exchange: Exchanges!, interval: Interval!, queryData: [ChartQuery!]!, symbol: String!): CombinedData!
    ticker24h(exchange: Exchanges!, symbol: String!): Ticker24h!
}

type Ticker24h {
    closeTime: Float!
    highPrice: String!
    lastPrice: String!
    lowPrice: String!
    openPrice: String!
    openTime: Float!
    priceChange: String!
    priceChangePercent: String!
    volume: String!
}

type Values {
    marker: String!
    x: Float
    y: Float
}

enum AxisDependency {
    LEFT
    RIGHT
}

enum CacheControlScope {
    PRIVATE
    PUBLIC
}

enum CandleStickPaintStyle {
    FILL
    FILL_AND_STROKE
    STROKE
}

enum ChartQuery {
    CANDLESTICK
    EMA
    VOLUME
}

enum ConfigMode {
    CUBIC_BEZIER
    HORIZONTAL_BEZIER
    LINEAR
    STEPPED
}

enum Exchanges {
    binance
}

enum Interval {
    d1
    h1
    h12
    h2
    h4
    h6
    h8
    m1
    m15
    m3
    m30
    m5
}
